{"version":3,"sources":["../../../../../src/modules/common/relayers/lib/starportSigningClient.js"],"names":["fromHexString","hexString","Uint8Array","match","map","byte","parseInt","StarportSigningClient","signerAddress","messages","fee","memo","tx","result","error","JSON","parse","message","code","data","txHash","Buffer","from","i","tmClient","hash","prove","res","height","rawLog","log","SigningStargateClient"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD;AAAA,SACrB,IAAIC,UAAJ,CAAeD,SAAS,CAACE,KAAV,CAAgB,SAAhB,EAA2BC,GAA3B,CAA+B,UAACC,KAAD;AAAA,WAAUC,QAAQ,CAACD,KAAD,EAAO,EAAP,CAAlB;AAAA,GAA/B,CAAf,CADqB;AAAA,CAAtB,C,CAGA;;;IAEqBE,qB;;;;;;;;;;;;;;sFACpB,iBAAuBC,aAAvB,EAAsCC,QAAtC,EAAgDC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqDC,gBAAAA,IAArD,2DAA4D,EAA5D;AAAA,6IAC+BH,aAD/B,EAC8CC,QAD9C,EACwDC,GADxD,EAC6DC,IAD7D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;iFAGA,kBAAkBC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAGmCA,EAHnC;;AAAA;AAGEC,gBAAAA,MAHF;AAAA,kDAISA,MAJT;;AAAA;AAAA;AAAA;AAAA;AAOOC,gBAAAA,KAPP,GAOeC,IAAI,CAACC,KAAL,CAAW,aAAEC,OAAb,CAPf;;AAAA,sBASIH,KAAK,CAACI,IAAN,IAAc,CAAC,KAAf,IACAJ,KAAK,CAACK,IAAN,IAAc,oDAVlB;AAAA;AAAA;AAAA;;AAYQC,gBAAAA,MAZR,GAYiB,mBAAOC,MAAM,CAACC,IAAP,CAAYV,EAAZ,CAAP,CAZjB;AAaQW,gBAAAA,CAbR,GAaY,CAbZ;;AAAA;AAAA,sBAcWA,CAAC,GAAG,EAdf;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAgBsB,KAAKC,QAAL,CAAcZ,EAAd,CAAiB;AAChCa,kBAAAA,IAAI,EAAEzB,aAAa,CAACoB,MAAD,CADa;AAEhCM,kBAAAA,KAAK,EAAE;AAFyB,iBAAjB,CAhBtB;;AAAA;AAgBUC,gBAAAA,GAhBV;AAAA,kDAoBa;AACNC,kBAAAA,MAAM,EAAED,GAAG,CAACC,MADN;AAENV,kBAAAA,IAAI,EAAES,GAAG,CAACd,MAAJ,CAAWK,IAFX;AAGNW,kBAAAA,MAAM,EAAEF,GAAG,CAACd,MAAJ,CAAWiB;AAHb,iBApBb;;AAAA;AAAA;AAAA;;AAAA;AA4BKP,gBAAAA,CAAC;AA5BN;AAAA,uBA6BW,kBAAM,IAAN,CA7BX;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAJkDQ,+B","sourcesContent":["import { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { sha256 } from \"js-sha256\";\nimport { sleep } from \"@cosmjs/utils\";\nconst fromHexString = (hexString) =>\n\tnew Uint8Array(hexString.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n\n// This is a wrapper around SigningStargateClient that waits up to an additional 1 minute for a Tx to be committed regardless of rpc endpoint timeout response\n\nexport default class StarportSigningClient extends SigningStargateClient {\n\tasync signAndBroadcast(signerAddress, messages, fee, memo = \"\") {\n\t\treturn super.signAndBroadcast(signerAddress, messages, fee, memo);\n\t}\n\tasync broadcastTx(tx) {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await super.broadcastTx(tx);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\ttry {\n\t\t\t\tlet error = JSON.parse(e.message);\n\t\t\t\tif (\n\t\t\t\t\terror.code == -32603 &&\n\t\t\t\t\terror.data == \"timed out waiting for tx to be included in a block\"\n\t\t\t\t) {\n\t\t\t\t\tlet txHash = sha256(Buffer.from(tx));\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\twhile (i < 20) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet res = await this.tmClient.tx({\n\t\t\t\t\t\t\t\thash: fromHexString(txHash),\n\t\t\t\t\t\t\t\tprove: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\theight: res.height,\n\t\t\t\t\t\t\t\tcode: res.result.code,\n\t\t\t\t\t\t\t\trawLog: res.result.log,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tawait sleep(3000);\n\t\t\t\t\t}\n\t\t\t\t\tthrow e;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} catch (notjson) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"file":"starportSigningClient.js"}