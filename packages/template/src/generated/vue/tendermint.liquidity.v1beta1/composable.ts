// Generated by Ignite ignite.com/cli
import { unref } from 'vue'
import Module from "cosmos-gaia-ts-client/tendermint.liquidity.v1beta1/module";
import useGaia from '../use'
		
type SendMsgDepositWithinBatchType = typeof Module.prototype.sendMsgDepositWithinBatch
type SendMsgWithdrawWithinBatchType = typeof Module.prototype.sendMsgWithdrawWithinBatch
type SendMsgSwapWithinBatchType = typeof Module.prototype.sendMsgSwapWithinBatch
type SendMsgCreatePoolType = typeof Module.prototype.sendMsgCreatePool

type QueryLiquidityPoolsType = typeof Module.prototype.queryLiquidityPools
type QueryLiquidityPoolType = typeof Module.prototype.queryLiquidityPool
type QueryLiquidityPoolByPoolCoinDenomType = typeof Module.prototype.queryLiquidityPoolByPoolCoinDenom
type QueryLiquidityPoolByReserveAccType = typeof Module.prototype.queryLiquidityPoolByReserveAcc
type QueryLiquidityPoolBatchType = typeof Module.prototype.queryLiquidityPoolBatch
type QueryPoolBatchSwapMsgsType = typeof Module.prototype.queryPoolBatchSwapMsgs
type QueryPoolBatchSwapMsgType = typeof Module.prototype.queryPoolBatchSwapMsg
type QueryPoolBatchDepositMsgsType = typeof Module.prototype.queryPoolBatchDepositMsgs
type QueryPoolBatchDepositMsgType = typeof Module.prototype.queryPoolBatchDepositMsg
type QueryPoolBatchWithdrawMsgsType = typeof Module.prototype.queryPoolBatchWithdrawMsgs
type QueryPoolBatchWithdrawMsgType = typeof Module.prototype.queryPoolBatchWithdrawMsg
type QueryParamsType = typeof Module.prototype.queryParams


type Response = {
  sendMsgDepositWithinBatch: SendMsgDepositWithinBatchType,
  sendMsgWithdrawWithinBatch: SendMsgWithdrawWithinBatchType,
  sendMsgSwapWithinBatch: SendMsgSwapWithinBatchType,
  sendMsgCreatePool: SendMsgCreatePoolType,
  
  queryLiquidityPools: QueryLiquidityPoolsType
  queryLiquidityPool: QueryLiquidityPoolType
  queryLiquidityPoolByPoolCoinDenom: QueryLiquidityPoolByPoolCoinDenomType
  queryLiquidityPoolByReserveAcc: QueryLiquidityPoolByReserveAccType
  queryLiquidityPoolBatch: QueryLiquidityPoolBatchType
  queryPoolBatchSwapMsgs: QueryPoolBatchSwapMsgsType
  queryPoolBatchSwapMsg: QueryPoolBatchSwapMsgType
  queryPoolBatchDepositMsgs: QueryPoolBatchDepositMsgsType
  queryPoolBatchDepositMsg: QueryPoolBatchDepositMsgType
  queryPoolBatchWithdrawMsgs: QueryPoolBatchWithdrawMsgsType
  queryPoolBatchWithdrawMsg: QueryPoolBatchWithdrawMsgType
  queryParams: QueryParamsType
  
}

function useModule(): Response {
  let { gaia } = useGaia()

  let {
	
	sendMsgDepositWithinBatch,
  
	sendMsgWithdrawWithinBatch,
  
	sendMsgSwapWithinBatch,
  
	sendMsgCreatePool,
  
  
  queryLiquidityPools,
  
  queryLiquidityPool,
  
  queryLiquidityPoolByPoolCoinDenom,
  
  queryLiquidityPoolByReserveAcc,
  
  queryLiquidityPoolBatch,
  
  queryPoolBatchSwapMsgs,
  
  queryPoolBatchSwapMsg,
  
  queryPoolBatchDepositMsgs,
  
  queryPoolBatchDepositMsg,
  
  queryPoolBatchWithdrawMsgs,
  
  queryPoolBatchWithdrawMsg,
  
  queryParams,
  
  } = unref(gaia.tendermintLiquidityV1Beta1)

  
  
  
	sendMsgDepositWithinBatch = sendMsgDepositWithinBatch.bind(gaia.tendermintLiquidityV1Beta1)
  
	sendMsgWithdrawWithinBatch = sendMsgWithdrawWithinBatch.bind(gaia.tendermintLiquidityV1Beta1)
  
	sendMsgSwapWithinBatch = sendMsgSwapWithinBatch.bind(gaia.tendermintLiquidityV1Beta1)
  
	sendMsgCreatePool = sendMsgCreatePool.bind(gaia.tendermintLiquidityV1Beta1)
  
  
  queryLiquidityPools = queryLiquidityPools.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryLiquidityPool = queryLiquidityPool.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryLiquidityPoolByPoolCoinDenom = queryLiquidityPoolByPoolCoinDenom.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryLiquidityPoolByReserveAcc = queryLiquidityPoolByReserveAcc.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryLiquidityPoolBatch = queryLiquidityPoolBatch.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchSwapMsgs = queryPoolBatchSwapMsgs.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchSwapMsg = queryPoolBatchSwapMsg.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchDepositMsgs = queryPoolBatchDepositMsgs.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchDepositMsg = queryPoolBatchDepositMsg.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchWithdrawMsgs = queryPoolBatchWithdrawMsgs.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryPoolBatchWithdrawMsg = queryPoolBatchWithdrawMsg.bind(gaia.tendermintLiquidityV1Beta1)
  
  queryParams = queryParams.bind(gaia.tendermintLiquidityV1Beta1)
  

  return {
  
  sendMsgDepositWithinBatch,
  
  sendMsgWithdrawWithinBatch,
  
  sendMsgSwapWithinBatch,
  
  sendMsgCreatePool,
  
  
  queryLiquidityPools,
  
  queryLiquidityPool,
  
  queryLiquidityPoolByPoolCoinDenom,
  
  queryLiquidityPoolByReserveAcc,
  
  queryLiquidityPoolBatch,
  
  queryPoolBatchSwapMsgs,
  
  queryPoolBatchSwapMsg,
  
  queryPoolBatchDepositMsgs,
  
  queryPoolBatchDepositMsg,
  
  queryPoolBatchWithdrawMsgs,
  
  queryPoolBatchWithdrawMsg,
  
  queryParams,
  
  }
}

export { useModule }
